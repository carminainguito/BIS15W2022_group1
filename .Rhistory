renamed <- happiness2$NAME
renamed <- str_replace(renamed, c('Libya'), replacement = 'Libyan Arab Jamahiriya')
renamed <- str_replace(renamed, c('Venezuela Bolivarian Republic of'), replacement = 'Venezuela')
renamed <- str_replace(renamed, c('South Sudan'), replacement = 'Sudan')
renamed <- str_replace(renamed, c('Congo Brazzaville'), replacement = 'Congo')
renamed <- str_replace(renamed, c('Congo Kinshasa'), replacement = 'Democratic Republic of the Congo')
renamed <- str_replace(renamed, c('Tanzania'), replacement = 'United Republic of Tanzaniz')
renamed <- str_replace(renamed, c('Vietnam'), replacement = 'Viet Nam')
renamed <- str_replace(renamed, c('Syria'), replacement = 'Syrian Arab Republic')
renamed <- str_replace(renamed, c('Iran'), replacement = 'Iran (Islamic Republic of)')
renamed <- str_replace(renamed, c('Moldova'), replacement = 'Republic of Moldavo')
renamed <- str_replace(renamed, c('North Moldavo'), replacement = 'Republic of Moldavo')
happiness2$NAME = renamed
world_map@data <- world_map@data %>%
mutate(NAME = str_replace_all(NAME , "\\*|\\(|\\)", "")) %>%
mutate(NAME = str_replace(NAME, c('&'), replacement = 'and'))
world_map@data <- left_join(world_map@data, happiness2, by="NAME")
world_map@data$mean_happiness_score <- as.numeric(as.character(world_map@data$mean_happiness_score))%>%
round(2)
mypalette <- colorNumeric( palette="viridis", domain=world_map@data$mean_happiness_score, na.color="transparent")
mypalette(c(4,5))
m <- leaflet(world_map)%>%
addTiles()%>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(stroke = FALSE, fillOpacity = 0.5, smoothFactor = 0.5, color = ~colorNumeric("Set3", mean_happiness_score)(mean_happiness_score) )
mybins <- c(0,1,2,3,4,5)
mypalette <- colorBin( palette="viridis", domain=world_map@data$mean_happiness_score, na.color="transparent", bins=mybins)
mytext <- paste(
"Country: ", world_map@data$NAME,"<br/>",
"GDP Contribution: ", world_map@data$mean_gdp_contrib, "<br/>",
"Family Contribution: ", world_map@data$mean_family_contrib, "<br/>",
"Life Expectancy Contribution: ", world_map@data$mean_health_contrib, "<br/>",
"Freedom Contribution: ", world_map@data$mean_freedom_contrib, "<br/>",
"Government Trust Contribution: ", world_map@data$mean_trust_contrib, "<br/>",
"Generosity Contribution: ", world_map@data$mean_generosity_contrib, "<br/>",
"Happiness Score: ", round(world_map@data$mean_happiness_score, 2),
sep="") %>%
lapply(htmltools::HTML)
leaflet(world_map) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = ~mypalette(mean_happiness_score),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
) %>%
addLegend( pal=mypalette, values=~mean_happiness_score, opacity=0.9, title = "Happiness Score", position = "bottomleft" )
m
mytext <- paste(
"Country: ", world_map@data$NAME,"<br/>",
"GDP Contribution: ", world_map@data$mean_gdp_contrib, "<br/>",
"Family Contribution: ", world_map@data$mean_family_contrib, "<br/>",
"Life Expectancy Contribution: ", world_map@data$mean_health_contrib, "<br/>",
"Freedom Contribution: ", world_map@data$mean_freedom_contrib, "<br/>",
"Government Trust Contribution: ", world_map@data$mean_trust_contrib, "<br/>",
"Generosity Contribution: ", world_map@data$mean_generosity_contrib, "<br/>",
"Happiness Score: ", round(world_map@data$mean_happiness_score, 2),
sep="") %>%
lapply(htmltools::HTML)
mybins <- c(0,1,2,3,4,5,6,7,8,9,10)
mypalette <- colorBin( palette="viridis", domain=world_map@data$mean_happiness_score, na.color="transparent", bins=mybins)
mytext <- paste(
"Country: ", world_map@data$NAME,"<br/>",
"GDP Contribution: ", world_map@data$mean_gdp_contrib, "<br/>",
"Family Contribution: ", world_map@data$mean_family_contrib, "<br/>",
"Life Expectancy Contribution: ", world_map@data$mean_health_contrib, "<br/>",
"Freedom Contribution: ", world_map@data$mean_freedom_contrib, "<br/>",
"Government Trust Contribution: ", world_map@data$mean_trust_contrib, "<br/>",
"Generosity Contribution: ", world_map@data$mean_generosity_contrib, "<br/>",
"Happiness Score: ", round(world_map@data$mean_happiness_score, 2),
sep="") %>%
lapply(htmltools::HTML)
leaflet(world_map) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = ~mypalette(mean_happiness_score),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
) %>%
addLegend( pal=mypalette, values=~mean_happiness_score, opacity=0.9, title = "Happiness Score", position = "bottomleft" )
m
world_map <- readOGR(
dsn= paste0("data/TM_WORLD_BORDERS_SIMPL-0.3.shp"),
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
world_map@data
world_map@data <- world_map@data %>%
mutate(NAME = str_replace_all(NAME , "\\*|\\(|\\)", "")) %>%
mutate(NAME = str_replace(NAME, c('&'), replacement = 'and'))%>%
mutate(NAME = str_replace(NAME, c('-'), replacement = 'and'))%>%
mutate(NAME = str_replace(NAME, c(','), replacement = '_'))
world_map@data <- left_join(world_spdf@data, happiness2, by="NAME")
happiness2 <- happiness %>%
mutate(NAME = str_replace_all(NAME , "\\*|\\(|\\)", "")) %>%
mutate(NAME = str_replace(NAME, c('&'), replacement = 'and'))%>%
mutate(NAME = str_replace(NAME, c('-'), replacement = 'and'))%>%
mutate(NAME = str_replace(NAME, c(','), replacement = '_'))
renamed <- happiness2$NAME
renamed <- str_replace(renamed, c('Libya'), replacement = 'Libyan Arab Jamahiriya')
renamed <- str_replace(renamed, c('Venezuela Bolivarian Republic of'), replacement = 'Venezuela')
renamed <- str_replace(renamed, c('South Sudan'), replacement = 'Sudan')
renamed <- str_replace(renamed, c('Congo Brazzaville'), replacement = 'Congo')
renamed <- str_replace(renamed, c('Congo Kinshasa'), replacement = 'Democratic Republic of the Congo')
renamed <- str_replace(renamed, c('Tanzania'), replacement = 'United Republic of Tanzania')
renamed <- str_replace(renamed, c('Vietnam'), replacement = 'Viet Nam')
renamed <- str_replace(renamed, c('Syria'), replacement = 'Syrian Arab Republic')
renamed <- str_replace(renamed, c('Iran'), replacement = 'Iran (Islamic Republic of)')
renamed <- str_replace(renamed, c('Moldova'), replacement = 'Republic of Moldavo')
renamed <- str_replace(renamed, c('North Moldavo'), replacement = 'Republic of Moldavo')
happiness2$NAME = renamed
world_map@data <- world_map@data %>%
mutate(NAME = str_replace_all(NAME , "\\*|\\(|\\)", "")) %>%
mutate(NAME = str_replace(NAME, c('&'), replacement = 'and'))%>%
mutate(NAME = str_replace(NAME, c('-'), replacement = 'and'))%>%
mutate(NAME = str_replace(NAME, c(','), replacement = '_'))
world_map@data <- left_join(world_spdf@data, happiness2, by="NAME")
world_map@data <- world_map@data %>%
mutate(NAME = str_replace_all(NAME , "\\*|\\(|\\)", "")) %>%
mutate(NAME = str_replace(NAME, c('&'), replacement = 'and'))%>%
mutate(NAME = str_replace(NAME, c('-'), replacement = 'and'))%>%
mutate(NAME = str_replace(NAME, c(','), replacement = '_'))
world_map@data <- left_join(world_map@data, happiness2, by="NAME")
world_map@data$mean_happiness_score <- as.numeric(as.character(world_map@data$mean_happiness_score))%>%
round(2)
mypalette <- colorNumeric( palette="viridis", domain=world_map@data$mean_happiness_score, na.color="transparent")
mypalette(c(4,5))
m <- leaflet(world_map)%>%
addTiles()%>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(stroke = FALSE, fillOpacity = 0.5, smoothFactor = 0.5, color = ~colorNumeric("Set3", mean_happiness_score)(mean_happiness_score) )
mybins <- c(0,1,2,3,4,5,6,7,8,9,10)
mypalette <- colorBin( palette="viridis", domain=world_map@data$mean_happiness_score, na.color="transparent", bins=mybins)
mytext <- paste(
"Country: ", world_map@data$NAME,"<br/>",
"GDP Contribution: ", world_map@data$mean_gdp_contrib, "<br/>",
"Family Contribution: ", world_map@data$mean_family_contrib, "<br/>",
"Life Expectancy Contribution: ", world_map@data$mean_health_contrib, "<br/>",
"Freedom Contribution: ", world_map@data$mean_freedom_contrib, "<br/>",
"Government Trust Contribution: ", world_map@data$mean_trust_contrib, "<br/>",
"Generosity Contribution: ", world_map@data$mean_generosity_contrib, "<br/>",
"Happiness Score: ", round(world_map@data$mean_happiness_score, 2),
sep="") %>%
lapply(htmltools::HTML)
leaflet(world_map) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = ~mypalette(mean_happiness_score),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
) %>%
addLegend( pal=mypalette, values=~mean_happiness_score, opacity=0.9, title = "Happiness Score", position = "bottomleft" )
m
View(happiness2)
world_map@data <- world_map@data %>%
mutate(NAME = str_replace_all(NAME , "\\*|\\(|\\)", "")) %>%
mutate(NAME = str_replace(NAME, c('&'), replacement = 'and'))%>%
mutate(NAME = str_replace(NAME, c('-'), replacement = 'and'))%>%
mutate(NAME = str_replace(NAME, c(','), replacement = '_'))
world_map@data <- left_join(world_map@data, happiness2, by="NAME")
world_map@data
View(happiness2)
world_map@data$mean_happiness_score <- as.numeric(as.character(world_map@data$mean_happiness_score))%>%
round(2)
world_map@data$mean_happiness_score <- as.numeric(as.character(world_map@data$mean_happiness_score))%>%
round(2)
world_map@data$mean_happiness_score <- as.numeric(as.character(world_map@data$mean_happiness_score))%>%
round(2)
world_map@data$mean_happiness_score <- as.numeric(as.character(world_map@data$mean_happiness_score))%>%
round(2)
world_map@data$mean_happiness_score <- as.numeric(as.character(world_map@data$mean_happiness_score))%>%
round(2)
world_map@data <- world_map@data %>%
mutate(NAME = str_replace_all(NAME , "\\*|\\(|\\)", "")) %>%
mutate(NAME = str_replace(NAME, c('&'), replacement = 'and'))%>%
mutate(NAME = str_replace(NAME, c('-'), replacement = 'and'))%>%
mutate(NAME = str_replace(NAME, c(','), replacement = '_'))
world_map@data <- left_join(world_map@data, happiness2, by="NAME")
world_map@data
world_map@data$mean_happiness_score <- as.numeric(as.character(world_map@data$mean_happiness_score))%>%
round(2)
mypalette <- colorNumeric( palette="viridis", domain=world_map@data$mean_happiness_score, na.color="transparent")
mypalette(c(4,5))
m <- leaflet(world_map)%>%
addTiles()%>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(stroke = FALSE, fillOpacity = 0.5, smoothFactor = 0.5, color = ~colorNumeric("Set3", mean_happiness_score)(mean_happiness_score) )
mybins <- c(0,1,2,3,4,5,6,7,8,9,10)
mypalette <- colorBin( palette="viridis", domain=world_map@data$mean_happiness_score, na.color="transparent", bins=mybins)
mytext <- paste(
"Country: ", world_map@data$NAME,"<br/>",
"GDP Contribution: ", world_map@data$mean_gdp_contrib, "<br/>",
"Family Contribution: ", world_map@data$mean_family_contrib, "<br/>",
"Life Expectancy Contribution: ", world_map@data$mean_health_contrib, "<br/>",
"Freedom Contribution: ", world_map@data$mean_freedom_contrib, "<br/>",
"Government Trust Contribution: ", world_map@data$mean_trust_contrib, "<br/>",
"Generosity Contribution: ", world_map@data$mean_generosity_contrib, "<br/>",
"Happiness Score: ", round(world_map@data$mean_happiness_score, 2),
sep="") %>%
lapply(htmltools::HTML)
leaflet(world_map) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons(
fillColor = ~mypalette(mean_happiness_score),
stroke=TRUE,
fillOpacity = 0.9,
color="white",
weight=0.3,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
) %>%
addLegend( pal=mypalette, values=~mean_happiness_score, opacity=0.9, title = "Happiness Score", position = "bottomleft" )
m
world_map@data <- world_map@data %>%
mutate(NAME = str_replace_all(NAME , "\\*|\\(|\\)", "")) %>%
mutate(NAME = str_replace(NAME, c('&'), replacement = 'and'))%>%
mutate(NAME = str_replace(NAME, c('-'), replacement = 'and'))%>%
mutate(NAME = str_replace(NAME, c(','), replacement = '_'))
world_map@data <- left_join(world_map@data, happiness2, by="NAME")
world_map@data
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggmap)
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(scales)
library(ggthemes)
library(ggVennDiagram)
options(scipen=999)
happiness_2015 <- readr::read_csv("data/2015.csv")%>%
clean_names()
happiness_2016 <- readr::read_csv("data/2016.csv")%>%
clean_names()
happiness_2017 <- readr::read_csv("data/2017.csv")%>%
clean_names()
happiness_2018 <- readr::read_csv("data/2018.csv")%>%
clean_names()
happiness_2019 <- readr::read_csv("data/2019.csv")%>%
clean_names()
# Add year
happiness_2015_join <- happiness_2015 %>%
mutate(year = case_when(country != "NA" ~ "2015"))
happiness_2016_join <- happiness_2016 %>%
mutate(year = case_when(country != "NA" ~ "2016"))
happiness_2017_join <- happiness_2017 %>%
mutate(year = case_when(country != "NA" ~ "2017"))
happiness_2018_join <- happiness_2018 %>%
mutate(year = case_when(country_or_region != "NA" ~ "2018"))
happiness_2019_join <- happiness_2019 %>%
mutate(year = case_when(country_or_region != "NA" ~ "2019"))
#Change Column names
happiness_2015_join <- happiness_2015_join %>%
rename(country_or_region = country)
happiness_2016_join <- happiness_2016_join %>%
rename(country_or_region = country)
happiness_2017_join <- happiness_2017_join %>%
rename(country_or_region = country)
happiness_2018_join <- happiness_2018_join %>%
rename(happiness_rank = overall_rank,
happiness_score = score,
economy_gdp_per_capita = gdp_per_capita,
family = social_support,
health_life_expectancy = healthy_life_expectancy,
freedom = freedom_to_make_life_choices,
trust_government_corruption = perceptions_of_corruption)
happiness_2019_join <- happiness_2019_join %>%
rename(happiness_rank = overall_rank,
happiness_score = score,
economy_gdp_per_capita = gdp_per_capita,
family = social_support,
health_life_expectancy = healthy_life_expectancy,
freedom = freedom_to_make_life_choices,
trust_government_corruption = perceptions_of_corruption)
#merge data frames together
#thank you Joel
happiness_2018_join$trust_government_corruption <- as.numeric(happiness_2018_join$trust_government_corruption)
complete_happiness <- bind_rows(happiness_2015_join, happiness_2016_join, happiness_2017_join, happiness_2018_join, happiness_2019_join) #bind the data frames
complete_happiness <- complete_happiness %>%
select(-region, -standard_error, -dystopia_residual, -lower_confidence_interval, -upper_confidence_interval, -whisker_high, -whisker_low) #remove unwanted columns
complete_happiness_ave <- complete_happiness %>%
select(-happiness_rank)%>%
group_by(country_or_region)%>%
summarise(mean_happiness_score = mean(happiness_score),
mean_gdp_contrib = mean(economy_gdp_per_capita),
mean_family_contrib = mean(family),
mean_health_contrib = mean(health_life_expectancy),
mean_freedom_contrib = mean(freedom),
mean_trust_contrib = mean(trust_government_corruption),
mean_generosity_contrib = mean(generosity))
summary(complete_happiness)
glimpse(complete_happiness)
complete_happiness %>%
naniar::miss_var_summary()
happiness_venn <- complete_happiness_ave %>%
mutate(economy_contribution_percentage = mean_gdp_contrib/mean_happiness_score,
family_contribution_percentage = mean_family_contrib/mean_happiness_score,
health_contribution_percentage = mean_health_contrib/mean_happiness_score,
freedom_contribution_percentage = mean_freedom_contrib/mean_happiness_score,
generosity_contribution_percentage = mean_generosity_contrib/mean_happiness_score,
trust_contribution_percentage = mean_trust_contrib/mean_happiness_score,
happiness_category = case_when(mean_happiness_score <= 3 ~ "very unhappy",
mean_happiness_score > 3 & mean_happiness_score <= 5 ~ "unhappy",
mean_happiness_score > 5 & mean_happiness_score <= 7 ~ "happy",
mean_happiness_score > 7 ~ "very happy"),
economy_category = case_when(economy_contribution_percentage < 0.0833 ~ "insignificant",
economy_contribution_percentage >= 0.0833 ~ "significant"),
family_category = case_when(family_contribution_percentage < 0.0833 ~ "insignificant",
family_contribution_percentage >= 0.0833 ~ "significant"),
health_category = case_when(health_contribution_percentage < 0.0833 ~ "insignificant",
health_contribution_percentage >= 0.0833 ~ "significant"),
freedom_category = case_when(freedom_contribution_percentage < 0.0833 ~ "insignificant",
freedom_contribution_percentage >= 0.0833 ~ "significant"),
generosity_category = case_when(generosity_contribution_percentage < 0.0833 ~ "insignificant",
generosity_contribution_percentage >= 0.0833 ~ "significant"),
trust_category = case_when(trust_contribution_percentage < 0.0833 ~ "insignificant",
trust_contribution_percentage >= 0.0833 ~ "significant"))
happy_country_vec <- happiness_venn %>%
filter(happiness_category == "happy" | happiness_category == "very happy")%>%
pull(country_or_region)
gdp_vec <- happiness_venn %>%
filter(economy_category == "significant")%>%
pull(country_or_region)
generosity_vec <- happiness_venn %>%
filter(generosity_category == "significant")%>%
pull(country_or_region)
family_vec <- happiness_venn %>%
filter(family_category == "significant")%>%
pull(country_or_region)
health_vec <- happiness_venn %>%
filter(health_category == "significant")%>%
pull(country_or_region)
freedom_vec <- happiness_venn %>%
filter(freedom_category == "significant")%>%
pull(country_or_region)
trust_vec <- happiness_venn %>%
filter(trust_category == "significant")%>%
pull(country_or_region)
why_happy_list <- list(happy_country_vec, gdp_vec, generosity_vec)
ggVennDiagram(why_happy_list,
category.names = c("Happy Country", "GDP", "Generosity"),
label_color = "black")+
ggplot2::scale_fill_gradient(low="navyblue",high = "yellow")
happiness_pie <- complete_happiness_ave %>%
group_by(country_or_region)%>%
summarise(economy_contribution_percentage = mean_gdp_contrib/mean_happiness_score,
family_contribution_percentage = mean_family_contrib/mean_happiness_score,
health_contribution_percentage = mean_health_contrib/mean_happiness_score,
freedom_contribution_percentage = mean_freedom_contrib/mean_happiness_score,
generosity_contribution_percentage = mean_generosity_contrib/mean_happiness_score,
trust_contribution_percentage = mean_trust_contrib/mean_happiness_score)%>%
pivot_longer(-country_or_region,
names_to = "factor",
values_to = "score_perc")
complete_happiness_ave%>%
arrange(desc(mean_happiness_score))%>%
head(n=5)%>%
pull(country_or_region)
cats <- happiness_pie$factor
cats <- str_replace(cats, c('economy_contribution_percentage'), replacement = 'GDP')
cats <- str_replace(cats, c('family_contribution_percentage'), replacement = 'Family')
cats <- str_replace(cats, c('health_contribution_percentage'), replacement = 'Life Expectancy')
cats <- str_replace(cats, c('freedom_contribution_percentag'), replacement = 'Freedom')
cats <- str_replace(cats, c('generosity_contribution_percentage'), replacement = 'Generosity')
cats <- str_replace(cats, c('trust_contribution_percentage'), replacement = 'Government Trust')
happiness_pie2 <- happiness_pie %>%
mutate(labels = round(score_perc*100, digits = 2))
happiness_pie2$factor = cats
happy_pie1 <- happiness_pie2 %>%
filter(country_or_region == "Denmark")%>%
select(country_or_region, labels, factor)
happy_pie1_2 <- happy_pie1 %>%
mutate(pie_prop = labels/sum(happy_pie1$labels)*100) %>%
mutate(y_pos = cumsum(pie_prop)-0.5*pie_prop)
p1 <- ggplot(happy_pie1_2, aes(x="", y = pie_prop, fill = factor))+
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start = 0) +
theme_minimal() +
theme(legend.position= "right") +
guides(fill = guide_legend(title = "Factors"))+
geom_text(aes(y = pie_prop, label = percent(labels/100)), color = "black", size=3, angle = 2, position = position_stack(vjust = 0.5)) +
labs(x = "", y= "Proportions")+
scale_fill_brewer(palette="Set2")+
facet_wrap(~country_or_region)
happy_pie2 <- happiness_pie2 %>%
filter(country_or_region == "Norway")%>%
select(country_or_region, labels, factor)
happy_pie2_2 <- happy_pie2 %>%
mutate(pie_prop = labels/sum(happy_pie2$labels)*100) %>%
mutate(y_pos = cumsum(pie_prop)-0.5*pie_prop)
p2 <- ggplot(happy_pie2_2, aes(x="", y = pie_prop, fill = factor))+
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start = 0) +
theme_minimal() +
theme(legend.position= "right") +
guides(fill = guide_legend(title = "Factors"))+
geom_text(aes(y = pie_prop, label = percent(labels/100)), color = "black", size=3, angle = 2, position = position_stack(vjust = 0.5)) +
labs(x = "", y= "Proportions")+
scale_fill_brewer(palette="Set2")+
facet_wrap(~country_or_region)
happy_pie3 <- happiness_pie2 %>%
filter(country_or_region == "Finland")%>%
select(country_or_region, labels, factor)
happy_pie3_2 <- happy_pie3 %>%
mutate(pie_prop = labels/sum(happy_pie3$labels)*100) %>%
mutate(y_pos = cumsum(pie_prop)-0.5*pie_prop)
p3 <- ggplot(happy_pie3_2, aes(x="", y = pie_prop, fill = factor))+
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start = 0) +
theme_minimal() +
theme(legend.position= "right") +
guides(fill = guide_legend(title = "Factors"))+
geom_text(aes(y = pie_prop, label = percent(labels/100)), color = "black", size=3, angle = 2, position = position_stack(vjust = 0.5)) +
labs(x = "", y= "Proportions")+
scale_fill_brewer(palette="Set2")+
facet_wrap(~country_or_region)
happy_pie4 <- happiness_pie2 %>%
filter(country_or_region == "Switzerland")%>%
select(country_or_region, labels, factor)
happy_pie4_2 <- happy_pie4 %>%
mutate(pie_prop = labels/sum(happy_pie4$labels)*100) %>%
mutate(y_pos = cumsum(pie_prop)-0.5*pie_prop)
p4 <- ggplot(happy_pie4_2, aes(x="", y = pie_prop, fill = factor))+
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start = 0) +
theme_minimal() +
theme(legend.position= "right") +
guides(fill = guide_legend(title = "Factors"))+
geom_text(aes(y = pie_prop, label = percent(labels/100)), color = "black", size=3, angle = 2, position = position_stack(vjust = 0.5)) +
labs(x = "", y= "Proportions")+
scale_fill_brewer(palette="Set2")+
facet_wrap(~country_or_region)
happy_pie5 <- happiness_pie2 %>%
filter(country_or_region == "Iceland")%>%
select(country_or_region, labels, factor)
happy_pie5_2 <- happy_pie5 %>%
mutate(pie_prop = labels/sum(happy_pie5$labels)*100) %>%
mutate(y_pos = cumsum(pie_prop)-0.5*pie_prop)
p5 <- ggplot(happy_pie5_2, aes(x="", y = pie_prop, fill = factor))+
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start = 0) +
theme_minimal() +
theme(legend.position= "right") +
guides(fill = guide_legend(title = "Factors"))+
geom_text(aes(y = pie_prop, label = percent(labels/100)), color = "black", size=3, angle = 2, position = position_stack(vjust = 0.5)) +
labs(x = "", y= "Proportions")+
scale_fill_brewer(palette="Set2")+
facet_wrap(~country_or_region)
p1
p2
p3
p4
p5
unhappy_country_vec <- happiness_venn %>%
filter(happiness_category == "unhappy" | happiness_category == "very unhappy")%>%
pull(country_or_region)
gdp_vec2 <- happiness_venn %>%
filter(economy_category == "insignificant")%>%
pull(country_or_region)
generosity_vec2 <- happiness_venn %>%
filter(generosity_category == "insignificant")%>%
pull(country_or_region)
family_vec2 <- happiness_venn %>%
filter(family_category == "insignificant")%>%
pull(country_or_region)
health_vec2 <- happiness_venn %>%
filter(health_category == "insignificant")%>%
pull(country_or_region)
freedom_vec2 <- happiness_venn %>%
filter(freedom_category == "insignificant")%>%
pull(country_or_region)
trust_vec2 <- happiness_venn %>%
filter(trust_category == "insignificant")%>%
pull(country_or_region)
why_unhappy_list <- list(unhappy_country_vec, gdp_vec1, generosity_vec1)
why_unhappy_list <- list(unhappy_country_vec, gdp_vec2, generosity_vec2)
ggVennDiagram(why_unhappy_list,
category.names = c("Unhappy Country", "GDP", "Generosity"),
label_color = "black")+
ggplot2::scale_fill_gradient(low="navyblue",high = "yellow")
