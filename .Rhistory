swim_carni_aqua_ecto_list <- list(swimming_vec, carni_vec, aqua_vec, ecto_vec)
# Make the plot:
ggVennDiagram(swim_carni_aqua_ecto_list, category.names = c("Swim", "Carnivore", "Aquatic", "Ectotherm"))
# Make the plot:
ggVennDiagram(swim_carni_aqua_ecto_list, category.names = c("Swim", "Carnivore", "Aquatic", "Ectotherm"))+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")
# Make the plot:
ggVennDiagram(swim_carni_aqua_ecto_list, category.names = c("Swim", "Carnivore", "Aquatic", "Ectotherm"))+
scale_fill_brewer(palette = "Pastel1")
# Make the plot:
ggVennDiagram(swim_carni_aqua_ecto_list, category.names = c("Swim", "Carnivore", "Aquatic", "Ectotherm"))+
scale_color_brewer(palette = "Pastel1")+
scale_fill_distiller(palette = "Grey")+
# Make the plot:
ggVennDiagram(swim_carni_aqua_ecto_list, category.names = c("Swim", "Carnivore", "Aquatic", "Ectotherm"))+
scale_color_brewer(palette = "Pastel1")+
scale_fill_distiller(palette = "Grey")
# Make the plot:
ggVennDiagram(swim_carni_aqua_ecto_list, category.names = c("Swim", "Carnivore", "Aquatic", "Ectotherm"))
# Make the plot:
ggVennDiagram(swim_carni_aqua_ecto_list, category.names = c("Swim", "Carnivore", "Aquatic", "Ectotherm"))+
scale_color_brewer(palette = "Set3")+                   # sets palette for circle colors
scale_fill_distiller(palette = "Greys")+
# Make the plot:
ggVennDiagram(swim_carni_aqua_ecto_list, category.names = c("Swim", "Carnivore", "Aquatic", "Ectotherm"))+
scale_color_brewer(palette = "Set3")+                   # sets palette for circle colors
scale_fill_distiller(palette = "Greys")
# Make the plot:
ggVennDiagram(swim_carni_aqua_ecto_list, category.names = c("Swim", "Carnivore", "Aquatic", "Ectotherm"))
View(homerange)
homerange %>%
filter(thermoregulation == "ectotherm") %>%
filter(realm == "aquatic") %>%
filter(locomotion=="swimming") %>%
filter(trophic.guild != "carnivore")
homerange %>%
filter(thermoregulation == "ectotherm") %>%
filter(realm == "aquatic") %>%
filter(locomotion=="swimming") %>%
filter(trophic.guild != "carnivore") %>%
select(common.name)
?ggVennDiagram
hr_taxon_count <- homerange %>%
count(taxon)
hr_taxon_count
hr_taxon_count %>%
ggplot(aes(
label = taxon,
size = n,
color = taxon
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
reptilia_family_count <- homerange %>%
filter(class == "reptilia") %>%
count(family)
reptilia_family_count
hr_taxon_count %>%
ggplot(aes(label = family,
size = n,
color = family)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
reptilia_family_count %>%
ggplot(aes(label = family,
size = n,
color = family)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
reptilia_family_count %>%
ggplot(aes(label = family,
size = n,
color = family)) +
geom_text_wordcloud() +
scale_size_area(max_size = 15) +
theme_minimal()
reptilia_family_count %>%
ggplot(aes(label = family,
size = n,
color = family)) +
geom_text_wordcloud() +
scale_size_area(max_size = 17) +
theme_minimal()
reptilia_family_count %>%
ggplot(aes(label = family,
size = n,
color = family)) +
geom_text_wordcloud() +
scale_size_area(max_size = 15 ) +
theme_minimal()
library(tidyverse)
library(janitor)
library("palmerpenguins")
#install.packages("ggVennDiagram")
library(ggVennDiagram)
library(RColorBrewer)
#install.packages("ggworldcloud")
library(ggwordcloud)
options(scipen=999) #cancels the use of scientific notation for the session
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
beachbugs_long <- readr::read_csv("data/beachbugs_long.csv")
head(superhero_info)
superhero_info <- clean_names(superhero_info)
head(superhero_info)
glimpse(superhero_info)
View(superhero_info)
superhero_info %>%
filter(alignment == "bad") %>%
ggplot(aes(x = alignment, y = weight))+
geom_boxplot()
superhero_info %>%
ggplot(aes(x = alignment, y = weight))+
geom_boxplot()
superhero_info %>%
filter(alignment != "NA") %>%
ggplot(aes(x = alignment, y = weight))+
geom_boxplot()
superhero_info %>%
filter(alignment != "NA") %>%
ggplot(aes(x = alignment, y = weight, fill = alignment))+
geom_boxplot()
superhero_info %>%
filter(alignment != "NA") %>%
ggplot(aes(x = alignment, y = weight, fill = alignment))+
geom_boxplot()+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")+
labs(x="alignment",
y="weight")+
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
superhero_info %>%
filter(alignment != "NA") %>%
ggplot(aes(x = alignment, y = weight, fill = alignment))+
geom_boxplot()+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")+
labs(x="alignment",
y="weight")
superhero_info %>%
filter(alignment != "NA") %>%
ggplot(aes(x = alignment, y = weight, fill = alignment))+
geom_violin(alpha = 0.5, color = "grey")+
geom_boxplot(alpha = 0.3)+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")+
labs(x="alignment",
y="weight")
superhero_info %>%
filter(alignment != "NA") %>%
ggplot(aes(x = alignment, y = weight, fill = alignment))+
geom_violin(alpha = 0.5, color = "grey")+
geom_boxplot(alpha = 0.3, color = "grey")+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")+
labs(x="alignment",
y="weight")
superhero_info %>%
filter(alignment != "NA") %>%
ggplot(aes(x = alignment, y = weight, fill = alignment))+
geom_violin(alpha = 0.5)+
geom_boxplot(alpha = 0.3, color = "grey")+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")+
labs(x="alignment",
y="weight")
superhero_info %>%
filter(alignment != "NA") %>%
ggplot(aes(x = alignment, y = weight, fill = alignment))+
geom_violin(alpha = 0.5, na.rm = TRUE)+
geom_boxplot(alpha = 0.3, color = "grey", na.rm = TRUE)+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")+
labs(x="alignment",
y="weight")
superhero_info %>%
filter(alignment != "NA") %>%
ggplot(aes(x = alignment, y = weight, fill = alignment))+
geom_boxplot(na.rm = TRUE)+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")+
labs(x="alignment",
y="weight")
superhero_info %>%
filter(alignment != "NA") %>%
ggplot(aes(x = alignment, y = weight, fill = alignment))+
geom_violin(alpha = 0.5, na.rm = TRUE)+
geom_boxplot(alpha = 0.3, color = "grey", na.rm = TRUE)+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")+
labs(x="alignment",
y="weight")+
coord_flip()
superhero_info %>%
filter(alignment != "NA") %>%
ggplot(aes(x = alignment, y = weight, fill = alignment))+
geom_violin(alpha = 0.5, na.rm = TRUE)+
geom_boxplot(alpha = 0.3, color = "grey", na.rm = TRUE)+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")+
labs(x="alignment",
y="weight")
superhero_info %>%
filter(alignment != "NA") %>%
ggplot(aes(x = alignment, y = weight, fill = alignment))+
geom_violin(na.rm = TRUE)+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")+
labs(x="alignment",
y="weight")
superhero_info %>%
filter(alignment != "NA") %>%
ggplot(aes(x = alignment, y = weight, fill = alignment))+
geom_violin(alpha=0.5, na.rm = TRUE)+
geom_boxplot(alpha=0.5, color = "grey", na.rm = TRUE)+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")+
labs(x="alignment",
y="weight")
superhero_info %>%
count(race)
superhero_info %>%
count(race) %>%
arrange(desc(n))
superhero_info %>%
filter(gender !="NA") %>%
ggplot(aes(x=gender, y=height))+
geom_boxplot(alpha=0.5, color="grey")+
geom_violin(alpha=0.5)+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")+
labs(title = "Superhero Gender vs. Height",
x="NULL",
y="height")
superhero_info %>%
filter(gender !="NA") %>%
ggplot(aes(x=gender, y=height))+
geom_boxplot(alpha=0.5, color="grey", na.rm = TRUE)+
geom_violin(alpha=0.5, na.rm = TRUE)+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")+
labs(title = "Superhero Gender vs. Height",
x="NULL",
y="height")
superhero_info %>%
filter(gender !="NA") %>%
ggplot(aes(x=gender, y=height))+
geom_boxplot(alpha=0.5, color="grey", na.rm = TRUE)+
geom_violin(alpha=0.5, na.rm = TRUE)+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")+
labs(title = "Superhero Gender vs. Height",
x="gender",
y="height")
superhero_info %>%
filter(gender !="NA") %>%
ggplot(aes(x=gender, y=height, fill=gender))+
geom_boxplot(alpha=0.5, color="grey", na.rm = TRUE)+
geom_violin(alpha=0.5, na.rm = TRUE)+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")+
labs(title = "Superhero Gender vs. Height",
x="gender",
y="height")
superhero_info %>%
filter(gender !="NA") %>%
ggplot(aes(x=gender, y=height, fill=gender))+
geom_boxplot(alpha=0.5, color="grey", na.rm = TRUE)+
geom_violin(alpha=0.5, na.rm = TRUE)+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")+
labs(title = "Superhero Gender vs. Height",
x="gender",
y="height")+
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
superhero_info %>%
filter(gender !="NA") %>%
ggplot(aes(x=gender, y=height, fill=gender))+
geom_boxplot(alpha=0.5, color="grey", na.rm = TRUE)+
geom_violin(alpha=0.5, na.rm = TRUE)+
theme_linedraw()+
scale_fill_brewer(palette = "Pastel1")+
labs(title = "Superhero Gender vs. Height",
x="gender",
y="height")+
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))+
coord_flip()
head(beachbugs_long)
beachbugs_long %>%
ggplot(aes(x=site, y=year, fill=buglevels))+
geom_tile()+
scale_fill_gradient(low="yellow", high="red")
beachbugs_long %>%
ggplot(aes(x=site, y=year, fill=buglevels))+
geom_tile()+
scale_fill_gradient(low="yellow", high="red")+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Site",
y = NULL)
#makes a new column of the highest buglevel observed at each site
beachbugs_w_max <- beachbugs_long %>%
group_by(site) %>%
mutate(max_buglevel = max(buglevels, na.rm=T)) %>%
arrange(site)
beachbugs_w_max
#makes a new table where the buglevels are normalized to the max_buglevel
beachbugs_normalized <- beachbugs_w_max %>%
group_by(site) %>%
mutate(norm_buglevel = buglevels/max_buglevel) %>%
arrange(site,year) %>%
select(site, year, norm_buglevel)   # you dont have to select(), but I think its a clearer looking table
beachbugs_normalized
```{r}
#makes a new column of the highest buglevel observed at each site
beachbugs_w_max <- beachbugs_long %>%
group_by(site) %>%
mutate(max_buglevel = max(buglevels, na.rm=T)) %>%
arrange(site)
beachbugs_w_max
#makes a new table where the buglevels are normalized to the max_buglevel
beachbugs_normalized <- beachbugs_w_max %>%
group_by(site) %>%
mutate(norm_buglevel = buglevels/max_buglevel) %>%
arrange(site,year) %>%
select(site, year, norm_buglevel)   # you dont have to select(), but I think its a clearer looking table
beachbugs_normalized
beachbugs_normalized %>%
ggplot(aes(x=site, y=year, fill=norm_buglevel))+
geom_tile()+
scale_fill_gradient(low="yellow", high="red")
beachbugs_normalized %>%
ggplot(aes(x=site, y=year, fill=norm_buglevel))+
geom_tile()+
scale_fill_gradient(low="yellow", high="red")+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Site",
y = NULL)
# red eyes
red_eye_vec <- superhero_info %>%
filter(eye_color == "red") %>%
pull(name)
# evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(gender == "male") %>%
pull(name)
# bald
bald_vec <- superhero_info %>%
filter(hair_color == "bald") %>%
pull(name)
# evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_eye_vec <- superhero_info %>%
filter(eye_color == "red") %>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(gender == "male") %>%
pull(name)
# bald
bald_vec <- superhero_info %>%
filter(hair_color == "bald") %>%
pull(name)
evil_redeye_male_bald_list <- list(evil_vec, red_eye_vec, male_vec, bald_vec)
ggVennDiagram(evil_redeye_male_bald_list, category.names = c("Evil", "Red Eye", "Male", "Bald"))
# evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_eye_vec <- superhero_info %>%
filter(eye_color == "red") %>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(gender == "male") %>%
pull(name)
# bald
bald_vec <- superhero_info %>%
filter(hair_color == "No Hair") %>%
pull(name)
# evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_eye_vec <- superhero_info %>%
filter(eye_color == "red") %>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(gender == "Male") %>%
pull(name)
# bald
bald_vec <- superhero_info %>%
filter(hair_color == "No Hair") %>%
pull(name)
evil_redeye_male_bald_list <- list(evil_vec, red_eye_vec, male_vec, bald_vec)
evil_redeye_male_bald_list <- list(evil_vec, red_eye_vec, male_vec, bald_vec)
ggVennDiagram(evil_redeye_male_bald_list, category.names = c("Evil", "Red Eye", "Male", "Bald"))
# something like:
# ggVennDiagram( list, category.names = c("name", "name", "name", "name"))
ggVennDiagram(evil_redeye_male_bald_list, category.names = c("Evil", "Red Eye", "Male", "Bald"))
superhero_info %>%
filter(gender == "Male" & hair_color == "No Hair") %>%
pull(name)
superhero_info %>%
filter(gender == "Male" & hair_color == "No Hair")
superhero_info %>%
filter(gender == "Male" & hair_color == "No Hair") %>%
filter(eye_color !="red" & alignment !="bad")
superhero_info %>%
na.exclude() %>%
filter(gender == "Male" & hair_color == "No Hair") %>%
filter(eye_color !="red" & alignment !="bad")
superhero_info %>%
filter(gender == "Male" & hair_color == "No Hair") %>%
filter(eye_color !="red" & alignment !="bad")
superhero_info %>%
filter(gender == "Male" & hair_color != "No Hair") %>%
filter(eye_color !="red" & alignment !="bad")
superhero_info %>%
filter(gender == "Male" & hair_color != "No Hair" & eye_color !="red" & alignment !="bad")
superhero_info %>%
filter(gender == "Male" & hair_color != "No Hair" & eye_color !="red" & alignment !="bad") %>%
pull(name)
# good
good_vec <- superhero_info %>%
filter(alignment == "good")%>%
pull(name)
# blue eyes
blue_eye_vec <- superhero_info %>%
filter(eye_color == "blue") %>%
pull(name)
# male
marvel_vec <- superhero_info %>%
filter(publisher == "Marvel Comics") %>%
pull(name)
good_blueeye_marvel_list <- list(good_vec, blue_eye_vec, marvel_vec)
ggVennDiagram(good_blueeye_marvel_list, category.names = c("Good", "Blue Eye", "Marvel"))
head(superhero_powers)
power_frequency
power_frequency <- superhero_powers %>%
select(-hero_names) %>%
summarise_all(~(sum(.))) %>%
pivot_longer(everything(), names_to = "power", values_to = "freq")
```{r}
```{r}
head(superhero_powers)
power_frequency <- superhero_powers %>%
select(-hero_names) %>%
summarise_all(~(sum(.))) %>%
pivot_longer(everything(), names_to = "power", values_to = "freq")
power_frequency
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 14) +
theme_minimal()
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 8) +
theme_minimal()
power_quantity <- superhero_powers %>%
pivot_longer(-hero_names, names_to = "power", values_to = "yes_or_no") %>%
group_by(hero_names) %>%
mutate(sum_powers = sum(yes_or_no, na.rm=T)) %>%
arrange(desc(sum_powers), hero_names, desc(yes_or_no))
power_quantity
#we have to trim down to only the top 50, or it will crowd the image!
power_quantity <- power_quantity %>%
ungroup %>%
distinct(hero_names, sum_powers) %>%
slice_max(sum_powers, n = 50)
power_quantity
power_quantity %>%
ggplot(aes(
label = hero_names,
size = sum_powers,
color = hero_names
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 8) +
theme_minimal()
